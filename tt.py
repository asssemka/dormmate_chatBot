import requests
import time


def interactive_test():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç —á–∞—Ç–±–æ—Ç–∞"""
    base_url = "http://localhost:8000"

    print("üí¨ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –¢–ï–°–¢ –ß–ê–¢–ë–û–¢–ê")
    print("=" * 50)
    print("–í–≤–µ–¥–∏—Ç–µ 'quit' –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print("–í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    try:
        response = requests.get(f"{base_url}/", timeout=5)
        if response.status_code != 200:
            print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python perfect_server.py")
        return

    print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω. –ú–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã!")

    question_count = 0

    while True:
        try:
            print(f"\nüí¨ –í–æ–ø—Ä–æ—Å #{question_count + 1}:")
            question = input("‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å: ").strip()

            if not question:
                continue

            if question.lower() in ['quit', 'exit', '–≤—ã—Ö–æ–¥']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break

            if question.lower() == 'help':
                print("\nüìù –ü–†–ò–ú–ï–†–´ –í–û–ü–†–û–°–û–í:")
                examples = [
                    "–ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—â–µ–∂–∏—Ç–∏–µ –î–°3?",
                    "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—â–µ–∂–∏—Ç–∏–µ?",
                    "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã?",
                    "–ú–Ω–µ –Ω–µ –¥–∞–ª–∏ –æ–±—â–µ–∂–∏—Ç–∏–µ",
                    "–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤ –∫–æ–º–Ω–∞—Ç–µ?",
                    "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é –Ω–∞ –æ—Ç–∫–∞–∑?",
                    "–ö—É–¥–∞ –µ—Ö–∞—Ç—å, –µ—Å–ª–∏ –¥–∞–ª–∏ –º–µ—Å—Ç–æ –≤ –î–°3?",
                    "–ö–∞–∫–∏–µ –æ–±—â–∞–≥–∏ –µ—Å—Ç—å?",
                    "–ß–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π?"
                ]
                for i, example in enumerate(examples, 1):
                    print(f"   {i}. {example}")
                continue

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å
            start = time.time()
            response = requests.post(
                f"{base_url}/chat",
                json={
                    "question": question,
                    "user_id": "interactive_user",
                    "max_tokens": 120
                },
                timeout=30
            )
            end = time.time()

            if response.status_code == 200:
                result = response.json()

                print(f"\nü§ñ –û—Ç–≤–µ—Ç: {result['answer']}")
                print(f"üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.2f}")
                print(f"‚è±Ô∏è –í—Ä–µ–º—è: {result['generation_time']:.2f}—Å (–∑–∞–ø—Ä–æ—Å: {end - start:.2f}—Å)")
                print(f"üîß –ú–æ–¥–µ–ª—å: {result['model_info']}")

                # –ü—Ä–æ—Å—Ç–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
                if result['confidence'] > 0.8:
                    print("üåü –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞")
                elif result['confidence'] > 0.6:
                    print("‚úÖ –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞")
                elif result['confidence'] > 0.4:
                    print("‚ö†Ô∏è –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞")
                else:
                    print("‚ùå –ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞")

            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")

            question_count += 1

        except KeyboardInterrupt:
            print("\nüëã –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    print(f"\nüìä –í—Å–µ–≥–æ –∑–∞–¥–∞–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {question_count}")
    print("üèÅ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")


if __name__ == "__main__":
    interactive_test()

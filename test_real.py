import requests
import time

def test_real_chatbot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á–∞—Ç–±–æ—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    base_url = "http://localhost:8000"
    
    print("üè´ –¢–ï–°–¢–ò–†–£–ï–ú –£–ù–ò–í–ï–†–°–ò–¢–ï–¢–°–ö–ò–ô AI –ß–ê–¢–ë–û–¢")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    try:
        response = requests.get(f"{base_url}/")
        info = response.json()
        print("üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–û–î–ï–õ–ò:")
        for key, value in info.items():
            print(f"   {key}: {value}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –†–µ–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    real_questions = [
        "–ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—â–µ–∂–∏—Ç–∏–µ –î–°3?",
        "–ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—â–µ–∂–∏—Ç–∏–µ –î–°2–∞?", 
        "–ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—â–µ–∂–∏—Ç–∏–µ –ï–º–µ–Ω?",
        "–ú–Ω–µ –Ω–µ –¥–∞–ª–∏ –æ–±—â–µ–∂–∏—Ç–∏–µ",
        "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—â–µ–∂–∏—Ç–∏–µ?",
        "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –æ–±—â–µ–∂–∏—Ç–∏—è?",
        "–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å –æ–±—â–µ–∂–∏—Ç–∏–µ?",
        "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –æ—Ç–∫–∞–∑–∞–ª–∏ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏?",
        "–ú–æ–∂–Ω–æ –ª–∏ –ø–æ—Å–µ–ª–∏—Ç—å—Å—è –≤–¥–≤–æ—ë–º —Å –¥—Ä—É–≥–æ–º?",
        "–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –∂–∏–≤—ë—Ç –≤ –∫–æ–º–Ω–∞—Ç–µ?",
        "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",  # –¢–µ—Å—Ç –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
        "–ì–¥–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞?"     # –¢–µ—Å—Ç –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    ]
    
    print(f"\nüß™ –¢–ï–°–¢–ò–†–£–ï–ú {len(real_questions)} –†–ï–ê–õ–¨–ù–´–• –í–û–ü–†–û–°–û–í:")
    print("=" * 60)
    
    successful_answers = 0
    high_confidence_answers = 0
    
    for i, question in enumerate(real_questions, 1):
        print(f"\nüìù –¢–ï–°–¢ {i}/{len(real_questions)}")
        print(f"‚ùì –í–æ–ø—Ä–æ—Å: {question}")
        
        try:
            start = time.time()
            response = requests.post(
                f"{base_url}/chat",
                json={
                    "question": question,
                    "user_id": f"student_{i}",
                    "max_tokens": 120
                },
                timeout=30
            )
            end = time.time()
            
            if response.status_code == 200:
                result = response.json()
                
                print(f"ü§ñ –û—Ç–≤–µ—Ç: {result['answer']}")
                print(f"üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.2f}")
                print(f"‚è±Ô∏è –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {result['generation_time']:.2f}—Å")
                print(f"üîß –ú–æ–¥–µ–ª—å: {result['model_info']}")
                print(f"üì° –û–±—â–µ–µ –≤—Ä–µ–º—è: {end-start:.2f}—Å")
                
                # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
                if len(result['answer']) > 30 and result['confidence'] > 0.6:
                    print("‚úÖ –û–¢–õ–ò–ß–ù–´–ô –û–¢–í–ï–¢")
                    successful_answers += 1
                    if result['confidence'] > 0.8:
                        high_confidence_answers += 1
                elif len(result['answer']) > 15:
                    print("‚ö†Ô∏è –°–†–ï–î–ù–ò–ô –û–¢–í–ï–¢")
                    successful_answers += 0.5
                else:
                    print("‚ùå –°–õ–ê–ë–´–ô –û–¢–í–ï–¢")
                    
            else:
                print(f"‚ùå HTTP –û—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("-" * 60)
    
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {successful_answers}/{len(real_questions)}")
    print(f"üéØ –í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {high_confidence_answers}/{len(real_questions)}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(successful_answers/len(real_questions)*100):.1f}%")
    print(f"üî• –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {(high_confidence_answers/len(real_questions)*100):.1f}%")

if __name__ == "__main__":
    test_real_chatbot()
